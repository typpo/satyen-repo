#!/usr/bin/env python
# A module that quickly looks up variable names and scores generated by
# serialize.py.
#
# This can be used as a module in a server by directly calling run_query, or
# you can play with it via terminal.
#
# usage:
# query.py <serialized_file>
#

import sys
import cPickle as pickle

if len(sys.argv) < 1:
  print 'usage: query <serialized_path>'
  sys.exit(1)

# Reading in the lookup table takes some time, but actual lookups are O(1)
print 'Loading lookup table...'
lookup_table = pickle.load(open(sys.argv[1], 'r'))
print 'Loaded.'

def run_query(query):
  # Returns matches for a given query in the form of a list of {name, score}
  print 'Searching for "%s"' % (query)
  return lookup_table.get(query, None)

def result_comparator(a, b):
  return b['score'] - a['score']

if __name__ == "__main__":
  print 'Ready.'
  print 'This program matches queries matching variables of the form "<query>." and "<query>_"'
  print 'Type "q" to exit.'
  print
  while True:
    query = raw_input('Search for a variable: ')
    if query == 'q':
      break
    results = run_query(query)
    if results:
      for result in sorted(results, cmp=result_comparator)[:10]:
        print '%s: %s' % (result['name'], result['score'])
    else:
      print 'No matches.'
    print
